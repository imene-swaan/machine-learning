{
  "nbformat": 4,
  "nbformat_minor": 5,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.5"
    },
    "colab": {
      "name": "medical project",
      "provenance": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/imene-swaan/machine-learning/blob/master/medical%20project\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "delayed-techno"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd \n",
        "import matplotlib.pyplot as plt \n",
        "%matplotlib inline\n",
        "\n",
        "df = pd.read_csv(\"/STUDY 1_2_3 FULL DATASET - Primary Model.csv\")"
      ],
      "id": "delayed-techno",
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 306
        },
        "id": "worthy-launch",
        "outputId": "f3c3c0d4-1f42-43f9-81c7-b37344cffb26"
      },
      "source": [
        "df.head()"
      ],
      "id": "worthy-launch",
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sub_num</th>\n",
              "      <th>TARGET good_responder_psa_3m_2ymean_&gt;0.2psaincrease</th>\n",
              "      <th>mid_age_gp</th>\n",
              "      <th>cauc_black_asian_hisp_other</th>\n",
              "      <th>gleason_base_cat</th>\n",
              "      <th>weight_cat</th>\n",
              "      <th>prostatect</th>\n",
              "      <th>prev_radio therapy</th>\n",
              "      <th>clinstage_base2</th>\n",
              "      <th>metast_node_disease</th>\n",
              "      <th>bili_start</th>\n",
              "      <th>ast_start</th>\n",
              "      <th>alt_start</th>\n",
              "      <th>GENTEXT_AMLODIPINE</th>\n",
              "      <th>GENTEXT_ASPIRIN</th>\n",
              "      <th>GENTEXT_ATENOLOL</th>\n",
              "      <th>GENTEXT_DIAZEPAM</th>\n",
              "      <th>GENTEXT_DIGOXIN</th>\n",
              "      <th>GENTEXT_DOXAZOSIN</th>\n",
              "      <th>GENTEXT_ENALAPRIL</th>\n",
              "      <th>GENTEXT_FUROSEMIDE</th>\n",
              "      <th>GENTEXT_GLIBENCLAMIDE</th>\n",
              "      <th>GENTEXT_GLYCERYL TRINITRATE</th>\n",
              "      <th>GENTEXT_LISINOPRIL</th>\n",
              "      <th>GENTEXT_METOPROLOL</th>\n",
              "      <th>GENTEXT_NIFEDIPINE</th>\n",
              "      <th>GENTEXT_OMEPRAZOLE</th>\n",
              "      <th>GENTEXT_PARACETAMOL</th>\n",
              "      <th>GENTEXT_SALBUTAMOL</th>\n",
              "      <th>GENTEXT_SIMVASTATIN</th>\n",
              "      <th>GENTEXT_VITAMIN, NOT OTHERWISE SPECIFIED</th>\n",
              "      <th>GENTEXT_WARFARIN</th>\n",
              "      <th>PCLATEXT_ACETIC ACID DERIVATIVES AND RELATED SUBSTANCES</th>\n",
              "      <th>PCLATEXT_ALPHA-ADRENORECEPTOR BLOCKING AGENTS</th>\n",
              "      <th>PCLATEXT_ANALGESICS AND ANTIPYRETICS, ANILIDES</th>\n",
              "      <th>PCLATEXT_ANALGESICS AND ANTIPYRETICS, SALICYLIC ACID AND DERIVATIVES</th>\n",
              "      <th>PCLATEXT_ANGIOTENSIN-CONVERTING ENZYME (ACE) INHIBITORS, PLAIN</th>\n",
              "      <th>PCLATEXT_ANTI-ANGINAL VASODILATORS, ORGANIC NITRATES</th>\n",
              "      <th>PCLATEXT_ANTIDIABETIC SULFONAMIDES UREA DERIVATIVES</th>\n",
              "      <th>PCLATEXT_ANXIOLYTIC BENZODIAZEPINE DERIVATIVES</th>\n",
              "      <th>PCLATEXT_BETA BLOCKING AGENTS, PLAIN, NON-SELECTIVE</th>\n",
              "      <th>PCLATEXT_BETA BLOCKING AGENTS, PLAIN, SELECTIVE</th>\n",
              "      <th>PCLATEXT_DIGITALIS GLYCOSIDES</th>\n",
              "      <th>PCLATEXT_GLUCOCORTICOIDS</th>\n",
              "      <th>PCLATEXT_HIGH-CEILING DIURETICS, SULFONAMIDES, PLAIN</th>\n",
              "      <th>PCLATEXT_HMG COA REDUCTASE INHIBITORS</th>\n",
              "      <th>PCLATEXT_INHALATIONAL GLUCOCORTICOIDS</th>\n",
              "      <th>PCLATEXT_INHALATIONAL SELECTIVE BETA2-ADRENOCEPTOR AGONISTS</th>\n",
              "      <th>PCLATEXT_LOW-CEILING DIURETICS AND POTASSIUM-SPARING AGENTS</th>\n",
              "      <th>PCLATEXT_PROPIONIC ACID DERIVATIVES</th>\n",
              "      <th>PCLATEXT_PROTON PUMP INHIBITORS</th>\n",
              "      <th>PCLATEXT_SELECTIVE CALCIUM CHANNEL BLOCKERS, DIHYDROPYRIDINE DERIVATIVES</th>\n",
              "      <th>PCLATEXT_VITAMIN K ANTAGONISTS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>75</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>14.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>75</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>13.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>57</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6</td>\n",
              "      <td>12.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>85</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>16.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>20.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   sub_num  ...  PCLATEXT_VITAMIN K ANTAGONISTS\n",
              "0        1  ...                               0\n",
              "1        2  ...                               0\n",
              "2        3  ...                               0\n",
              "3        4  ...                               0\n",
              "4        5  ...                               0\n",
              "\n",
              "[5 rows x 53 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "structured-superintendent"
      },
      "source": [
        "df.drop(['sub_num'], axis = 1 , inplace = True)"
      ],
      "id": "structured-superintendent",
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "id": "combined-disposal",
        "outputId": "2be6f21a-2102-49e0-a9b2-3cbe189d1f38"
      },
      "source": [
        "df"
      ],
      "id": "combined-disposal",
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TARGET good_responder_psa_3m_2ymean_&gt;0.2psaincrease</th>\n",
              "      <th>mid_age_gp</th>\n",
              "      <th>cauc_black_asian_hisp_other</th>\n",
              "      <th>gleason_base_cat</th>\n",
              "      <th>weight_cat</th>\n",
              "      <th>prostatect</th>\n",
              "      <th>prev_radio therapy</th>\n",
              "      <th>clinstage_base2</th>\n",
              "      <th>metast_node_disease</th>\n",
              "      <th>bili_start</th>\n",
              "      <th>ast_start</th>\n",
              "      <th>alt_start</th>\n",
              "      <th>GENTEXT_AMLODIPINE</th>\n",
              "      <th>GENTEXT_ASPIRIN</th>\n",
              "      <th>GENTEXT_ATENOLOL</th>\n",
              "      <th>GENTEXT_DIAZEPAM</th>\n",
              "      <th>GENTEXT_DIGOXIN</th>\n",
              "      <th>GENTEXT_DOXAZOSIN</th>\n",
              "      <th>GENTEXT_ENALAPRIL</th>\n",
              "      <th>GENTEXT_FUROSEMIDE</th>\n",
              "      <th>GENTEXT_GLIBENCLAMIDE</th>\n",
              "      <th>GENTEXT_GLYCERYL TRINITRATE</th>\n",
              "      <th>GENTEXT_LISINOPRIL</th>\n",
              "      <th>GENTEXT_METOPROLOL</th>\n",
              "      <th>GENTEXT_NIFEDIPINE</th>\n",
              "      <th>GENTEXT_OMEPRAZOLE</th>\n",
              "      <th>GENTEXT_PARACETAMOL</th>\n",
              "      <th>GENTEXT_SALBUTAMOL</th>\n",
              "      <th>GENTEXT_SIMVASTATIN</th>\n",
              "      <th>GENTEXT_VITAMIN, NOT OTHERWISE SPECIFIED</th>\n",
              "      <th>GENTEXT_WARFARIN</th>\n",
              "      <th>PCLATEXT_ACETIC ACID DERIVATIVES AND RELATED SUBSTANCES</th>\n",
              "      <th>PCLATEXT_ALPHA-ADRENORECEPTOR BLOCKING AGENTS</th>\n",
              "      <th>PCLATEXT_ANALGESICS AND ANTIPYRETICS, ANILIDES</th>\n",
              "      <th>PCLATEXT_ANALGESICS AND ANTIPYRETICS, SALICYLIC ACID AND DERIVATIVES</th>\n",
              "      <th>PCLATEXT_ANGIOTENSIN-CONVERTING ENZYME (ACE) INHIBITORS, PLAIN</th>\n",
              "      <th>PCLATEXT_ANTI-ANGINAL VASODILATORS, ORGANIC NITRATES</th>\n",
              "      <th>PCLATEXT_ANTIDIABETIC SULFONAMIDES UREA DERIVATIVES</th>\n",
              "      <th>PCLATEXT_ANXIOLYTIC BENZODIAZEPINE DERIVATIVES</th>\n",
              "      <th>PCLATEXT_BETA BLOCKING AGENTS, PLAIN, NON-SELECTIVE</th>\n",
              "      <th>PCLATEXT_BETA BLOCKING AGENTS, PLAIN, SELECTIVE</th>\n",
              "      <th>PCLATEXT_DIGITALIS GLYCOSIDES</th>\n",
              "      <th>PCLATEXT_GLUCOCORTICOIDS</th>\n",
              "      <th>PCLATEXT_HIGH-CEILING DIURETICS, SULFONAMIDES, PLAIN</th>\n",
              "      <th>PCLATEXT_HMG COA REDUCTASE INHIBITORS</th>\n",
              "      <th>PCLATEXT_INHALATIONAL GLUCOCORTICOIDS</th>\n",
              "      <th>PCLATEXT_INHALATIONAL SELECTIVE BETA2-ADRENOCEPTOR AGONISTS</th>\n",
              "      <th>PCLATEXT_LOW-CEILING DIURETICS AND POTASSIUM-SPARING AGENTS</th>\n",
              "      <th>PCLATEXT_PROPIONIC ACID DERIVATIVES</th>\n",
              "      <th>PCLATEXT_PROTON PUMP INHIBITORS</th>\n",
              "      <th>PCLATEXT_SELECTIVE CALCIUM CHANNEL BLOCKERS, DIHYDROPYRIDINE DERIVATIVES</th>\n",
              "      <th>PCLATEXT_VITAMIN K ANTAGONISTS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>75</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7</td>\n",
              "      <td>14.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>75</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>13.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>57</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>95</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6</td>\n",
              "      <td>12.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>85</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>16.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>20.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3648</th>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3649</th>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3650</th>\n",
              "      <td>1</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3651</th>\n",
              "      <td>0</td>\n",
              "      <td>67</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>85</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3652</th>\n",
              "      <td>0</td>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3653 rows × 52 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      TARGET good_responder_psa_3m_2ymean_>0.2psaincrease  ...  PCLATEXT_VITAMIN K ANTAGONISTS\n",
              "0                                                     1    ...                               0\n",
              "1                                                     1    ...                               0\n",
              "2                                                     1    ...                               0\n",
              "3                                                     1    ...                               0\n",
              "4                                                     0    ...                               0\n",
              "...                                                 ...    ...                             ...\n",
              "3648                                                  0    ...                               0\n",
              "3649                                                  0    ...                               0\n",
              "3650                                                  1    ...                               0\n",
              "3651                                                  0    ...                               0\n",
              "3652                                                  0    ...                               0\n",
              "\n",
              "[3653 rows x 52 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "alpha-tanzania",
        "outputId": "cdf0a317-9149-4142-ce2a-f90f708624ae"
      },
      "source": [
        "X_names = list(df.columns)[1:]\n",
        "Y_name = list(df.columns)[0]\n",
        "\n",
        "print(X_names, '\\n', Y_name)"
      ],
      "id": "alpha-tanzania",
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['mid_age_gp', 'cauc_black_asian_hisp_other', 'gleason_base_cat', 'weight_cat', 'prostatect ', 'prev_radio therapy', 'clinstage_base2', 'metast_node_disease', 'bili_start', 'ast_start', 'alt_start', 'GENTEXT_AMLODIPINE', 'GENTEXT_ASPIRIN', 'GENTEXT_ATENOLOL', 'GENTEXT_DIAZEPAM', 'GENTEXT_DIGOXIN', 'GENTEXT_DOXAZOSIN', 'GENTEXT_ENALAPRIL', 'GENTEXT_FUROSEMIDE', 'GENTEXT_GLIBENCLAMIDE', 'GENTEXT_GLYCERYL TRINITRATE', 'GENTEXT_LISINOPRIL', 'GENTEXT_METOPROLOL', 'GENTEXT_NIFEDIPINE', 'GENTEXT_OMEPRAZOLE', 'GENTEXT_PARACETAMOL', 'GENTEXT_SALBUTAMOL', 'GENTEXT_SIMVASTATIN', 'GENTEXT_VITAMIN, NOT OTHERWISE SPECIFIED', 'GENTEXT_WARFARIN', 'PCLATEXT_ACETIC ACID DERIVATIVES AND RELATED SUBSTANCES', 'PCLATEXT_ALPHA-ADRENORECEPTOR BLOCKING AGENTS', 'PCLATEXT_ANALGESICS AND ANTIPYRETICS, ANILIDES', 'PCLATEXT_ANALGESICS AND ANTIPYRETICS, SALICYLIC ACID AND DERIVATIVES', 'PCLATEXT_ANGIOTENSIN-CONVERTING ENZYME (ACE) INHIBITORS, PLAIN', 'PCLATEXT_ANTI-ANGINAL VASODILATORS, ORGANIC NITRATES', 'PCLATEXT_ANTIDIABETIC SULFONAMIDES UREA DERIVATIVES', 'PCLATEXT_ANXIOLYTIC BENZODIAZEPINE DERIVATIVES', 'PCLATEXT_BETA BLOCKING AGENTS, PLAIN, NON-SELECTIVE', 'PCLATEXT_BETA BLOCKING AGENTS, PLAIN, SELECTIVE', 'PCLATEXT_DIGITALIS GLYCOSIDES', 'PCLATEXT_GLUCOCORTICOIDS', 'PCLATEXT_HIGH-CEILING DIURETICS, SULFONAMIDES, PLAIN', 'PCLATEXT_HMG COA REDUCTASE INHIBITORS', 'PCLATEXT_INHALATIONAL GLUCOCORTICOIDS', 'PCLATEXT_INHALATIONAL SELECTIVE BETA2-ADRENOCEPTOR AGONISTS', 'PCLATEXT_LOW-CEILING DIURETICS AND POTASSIUM-SPARING AGENTS', 'PCLATEXT_PROPIONIC ACID DERIVATIVES', 'PCLATEXT_PROTON PUMP INHIBITORS', 'PCLATEXT_SELECTIVE CALCIUM CHANNEL BLOCKERS, DIHYDROPYRIDINE DERIVATIVES', 'PCLATEXT_VITAMIN K ANTAGONISTS'] \n",
            " TARGET good_responder_psa_3m_2ymean_>0.2psaincrease\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "specific-think"
      },
      "source": [
        "X = df.iloc[:, 1:].values # Premières colonnes \n",
        "\n",
        "y = df['TARGET good_responder_psa_3m_2ymean_>0.2psaincrease']"
      ],
      "id": "specific-think",
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "differential-helena"
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score\n",
        "from xgboost import XGBClassifier\n",
        "\n",
        "# splitting data into training and validation set \n",
        "xtrain, xtest, ytrain, ytest = train_test_split(X, y, random_state=42, test_size=0.2)"
      ],
      "id": "differential-helena",
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fitted-twelve",
        "outputId": "2609ec9c-1b28-44a9-8c60-20a7ae139811"
      },
      "source": [
        "xgb = XGBClassifier().fit(xtrain, ytrain)\n",
        "\n",
        "predicted = xgb.predict(xtest)\n",
        "\n",
        "accuracy_score(ytest, predicted)"
      ],
      "id": "fitted-twelve",
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7264021887824897"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "concerned-sunrise",
        "outputId": "8d1a7b23-68f0-48f0-be23-022b5d6bda08"
      },
      "source": [
        "xgb.get_xgb_params()"
      ],
      "id": "concerned-sunrise",
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'base_score': 0.5,\n",
              " 'booster': 'gbtree',\n",
              " 'colsample_bylevel': 1,\n",
              " 'colsample_bynode': 1,\n",
              " 'colsample_bytree': 1,\n",
              " 'gamma': 0,\n",
              " 'learning_rate': 0.1,\n",
              " 'max_delta_step': 0,\n",
              " 'max_depth': 3,\n",
              " 'min_child_weight': 1,\n",
              " 'missing': None,\n",
              " 'n_estimators': 100,\n",
              " 'nthread': 1,\n",
              " 'objective': 'binary:logistic',\n",
              " 'reg_alpha': 0,\n",
              " 'reg_lambda': 1,\n",
              " 'scale_pos_weight': 1,\n",
              " 'seed': 0,\n",
              " 'subsample': 1,\n",
              " 'verbosity': 1}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "clinical-access"
      },
      "source": [
        "import xgboost as xgb"
      ],
      "id": "clinical-access",
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "guided-jumping"
      },
      "source": [
        "dtrain = xgb.DMatrix(xtrain, label=ytrain) \n",
        "dvalid = xgb.DMatrix(xtest, label=ytest) \n",
        "\n",
        "# Parameters that we are going to tune \n",
        "params = {\n",
        "    'objective':'binary:logistic',\n",
        "    'max_depth':6,\n",
        "    'min_child_weight': 1,\n",
        "    'eta':.3,\n",
        "    'subsample': 1,\n",
        "    'colsample_bytree': 1,\n",
        "    'gamma': 0\n",
        " }"
      ],
      "id": "guided-jumping",
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "interstate-commission"
      },
      "source": [
        "def custom_eval(preds, dtrain):\n",
        "    labels = dtrain.get_label().astype(np.int)\n",
        "    thresh = 0.5\n",
        "    preds [preds > thresh] = 1\n",
        "    preds [preds <= thresh] = 0\n",
        "    \n",
        "    return [('accuracy_score', accuracy_score(labels, preds))]"
      ],
      "id": "interstate-commission",
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "enhanced-operator"
      },
      "source": [
        "gridsearch_params = [\n",
        "    (max_depth, min_child_weight)\n",
        "    for max_depth in range(1,10)\n",
        "     for min_child_weight in range(1,10)\n",
        " ]"
      ],
      "id": "enhanced-operator",
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "extraordinary-passion",
        "outputId": "13589b57-60c3-4621-927d-a3db2b206d88"
      },
      "source": [
        "max_accuracy = 0.\n",
        "best_params = None \n",
        "\n",
        "for max_depth, min_child_weight in gridsearch_params:\n",
        "    print(\"CV with max_depth={}, min_child_weight={}\".format(max_depth, min_child_weight))\n",
        "    params['max_depth'] = max_depth\n",
        "    params['min_child_weight'] = min_child_weight\n",
        "    cv_results = xgb.cv(params, dtrain, feval= custom_eval, maximize=True, seed=16, nfold=5, early_stopping_rounds=20)     \n",
        "    mean_accuracy = cv_results['test-accuracy_score-mean'].max()\n",
        "    boost_rounds = cv_results['test-accuracy_score-mean'].argmax()    \n",
        "    print(\"\\t accuracy Score {} for {} rounds\".format(mean_accuracy, boost_rounds))    \n",
        "    if mean_accuracy > max_accuracy:\n",
        "        max_accuracy = mean_accuracy\n",
        "        best_params = (max_depth,min_child_weight) \n",
        "\n",
        "print(\"Best params: max_depth {}, min_child_weight {}, accuracy Score: {}\".format(best_params[0], best_params[1], max_accuracy))"
      ],
      "id": "extraordinary-passion",
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "CV with max_depth=1, min_child_weight=1\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=2\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=3\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=4\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=5\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=6\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=7\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=8\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=1, min_child_weight=9\n",
            "\t accuracy Score 0.7224282000000001 for 6 rounds\n",
            "CV with max_depth=2, min_child_weight=1\n",
            "\t accuracy Score 0.7227712000000001 for 6 rounds\n",
            "CV with max_depth=2, min_child_weight=2\n",
            "\t accuracy Score 0.7227712000000001 for 6 rounds\n",
            "CV with max_depth=2, min_child_weight=3\n",
            "\t accuracy Score 0.7237976 for 8 rounds\n",
            "CV with max_depth=2, min_child_weight=4\n",
            "\t accuracy Score 0.7237976 for 8 rounds\n",
            "CV with max_depth=2, min_child_weight=5\n",
            "\t accuracy Score 0.7237968 for 6 rounds\n",
            "CV with max_depth=2, min_child_weight=6\n",
            "\t accuracy Score 0.7237968 for 6 rounds\n",
            "CV with max_depth=2, min_child_weight=7\n",
            "\t accuracy Score 0.7241388000000001 for 9 rounds\n",
            "CV with max_depth=2, min_child_weight=8\n",
            "\t accuracy Score 0.7244814 for 9 rounds\n",
            "CV with max_depth=2, min_child_weight=9\n",
            "\t accuracy Score 0.7244814 for 9 rounds\n",
            "CV with max_depth=3, min_child_weight=1\n",
            "\t accuracy Score 0.7292774000000001 for 8 rounds\n",
            "CV with max_depth=3, min_child_weight=2\n",
            "\t accuracy Score 0.7285938000000001 for 8 rounds\n",
            "CV with max_depth=3, min_child_weight=3\n",
            "\t accuracy Score 0.7299627999999999 for 9 rounds\n",
            "CV with max_depth=3, min_child_weight=4\n",
            "\t accuracy Score 0.7265384 for 9 rounds\n",
            "CV with max_depth=3, min_child_weight=5\n",
            "\t accuracy Score 0.7268798000000001 for 8 rounds\n",
            "CV with max_depth=3, min_child_weight=6\n",
            "\t accuracy Score 0.7282498000000001 for 8 rounds\n",
            "CV with max_depth=3, min_child_weight=7\n",
            "\t accuracy Score 0.7299628 for 9 rounds\n",
            "CV with max_depth=3, min_child_weight=8\n",
            "\t accuracy Score 0.7289346000000001 for 9 rounds\n",
            "CV with max_depth=3, min_child_weight=9\n",
            "\t accuracy Score 0.7296164 for 7 rounds\n",
            "CV with max_depth=4, min_child_weight=1\n",
            "\t accuracy Score 0.7268815999999999 for 2 rounds\n",
            "CV with max_depth=4, min_child_weight=2\n",
            "\t accuracy Score 0.7241430000000001 for 2 rounds\n",
            "CV with max_depth=4, min_child_weight=3\n",
            "\t accuracy Score 0.7244872000000001 for 5 rounds\n",
            "CV with max_depth=4, min_child_weight=4\n",
            "\t accuracy Score 0.7251692000000001 for 8 rounds\n",
            "CV with max_depth=4, min_child_weight=5\n",
            "\t accuracy Score 0.7275622 for 4 rounds\n",
            "CV with max_depth=4, min_child_weight=6\n",
            "\t accuracy Score 0.7244802 for 4 rounds\n",
            "CV with max_depth=4, min_child_weight=7\n",
            "\t accuracy Score 0.725855 for 8 rounds\n",
            "CV with max_depth=4, min_child_weight=8\n",
            "\t accuracy Score 0.7248248 for 9 rounds\n",
            "CV with max_depth=4, min_child_weight=9\n",
            "\t accuracy Score 0.7258518 for 8 rounds\n",
            "CV with max_depth=5, min_child_weight=1\n",
            "\t accuracy Score 0.7237986000000001 for 3 rounds\n",
            "CV with max_depth=5, min_child_weight=2\n",
            "\t accuracy Score 0.724144 for 9 rounds\n",
            "CV with max_depth=5, min_child_weight=3\n",
            "\t accuracy Score 0.7224329999999999 for 8 rounds\n",
            "CV with max_depth=5, min_child_weight=4\n",
            "\t accuracy Score 0.7227764 for 8 rounds\n",
            "CV with max_depth=5, min_child_weight=5\n",
            "\t accuracy Score 0.7220922 for 9 rounds\n",
            "CV with max_depth=5, min_child_weight=6\n",
            "\t accuracy Score 0.7231162 for 9 rounds\n",
            "CV with max_depth=5, min_child_weight=7\n",
            "\t accuracy Score 0.7224328 for 7 rounds\n",
            "CV with max_depth=5, min_child_weight=8\n",
            "\t accuracy Score 0.7214071999999999 for 9 rounds\n",
            "CV with max_depth=5, min_child_weight=9\n",
            "\t accuracy Score 0.7255111999999999 for 6 rounds\n",
            "CV with max_depth=6, min_child_weight=1\n",
            "\t accuracy Score 0.7200394 for 4 rounds\n",
            "CV with max_depth=6, min_child_weight=2\n",
            "\t accuracy Score 0.7145581999999999 for 6 rounds\n",
            "CV with max_depth=6, min_child_weight=3\n",
            "\t accuracy Score 0.7231137999999999 for 6 rounds\n",
            "CV with max_depth=6, min_child_weight=4\n",
            "\t accuracy Score 0.7193508000000001 for 4 rounds\n",
            "CV with max_depth=6, min_child_weight=5\n",
            "\t accuracy Score 0.7203822 for 9 rounds\n",
            "CV with max_depth=6, min_child_weight=6\n",
            "\t accuracy Score 0.719693 for 9 rounds\n",
            "CV with max_depth=6, min_child_weight=7\n",
            "\t accuracy Score 0.7196944 for 8 rounds\n",
            "CV with max_depth=6, min_child_weight=8\n",
            "\t accuracy Score 0.7217486 for 7 rounds\n",
            "CV with max_depth=6, min_child_weight=9\n",
            "\t accuracy Score 0.7224296000000001 for 2 rounds\n",
            "CV with max_depth=7, min_child_weight=1\n",
            "\t accuracy Score 0.712166 for 5 rounds\n",
            "CV with max_depth=7, min_child_weight=2\n",
            "\t accuracy Score 0.7152452 for 4 rounds\n",
            "CV with max_depth=7, min_child_weight=3\n",
            "\t accuracy Score 0.7118202 for 1 rounds\n",
            "CV with max_depth=7, min_child_weight=4\n",
            "\t accuracy Score 0.7193514000000001 for 1 rounds\n",
            "CV with max_depth=7, min_child_weight=5\n",
            "\t accuracy Score 0.7111379999999999 for 7 rounds\n",
            "CV with max_depth=7, min_child_weight=6\n",
            "\t accuracy Score 0.715585 for 5 rounds\n",
            "CV with max_depth=7, min_child_weight=7\n",
            "\t accuracy Score 0.7155872000000001 for 3 rounds\n",
            "CV with max_depth=7, min_child_weight=8\n",
            "\t accuracy Score 0.7234586000000001 for 9 rounds\n",
            "CV with max_depth=7, min_child_weight=9\n",
            "\t accuracy Score 0.7227772 for 4 rounds\n",
            "CV with max_depth=8, min_child_weight=1\n",
            "\t accuracy Score 0.708407 for 2 rounds\n",
            "CV with max_depth=8, min_child_weight=2\n",
            "\t accuracy Score 0.7169587999999999 for 5 rounds\n",
            "CV with max_depth=8, min_child_weight=3\n",
            "\t accuracy Score 0.7172984 for 7 rounds\n",
            "CV with max_depth=8, min_child_weight=4\n",
            "\t accuracy Score 0.7152445999999999 for 1 rounds\n",
            "CV with max_depth=8, min_child_weight=5\n",
            "\t accuracy Score 0.7107962 for 4 rounds\n",
            "CV with max_depth=8, min_child_weight=6\n",
            "\t accuracy Score 0.7138744 for 8 rounds\n",
            "CV with max_depth=8, min_child_weight=7\n",
            "\t accuracy Score 0.7155896 for 2 rounds\n",
            "CV with max_depth=8, min_child_weight=8\n",
            "\t accuracy Score 0.7203782000000001 for 7 rounds\n",
            "CV with max_depth=8, min_child_weight=9\n",
            "\t accuracy Score 0.7234621999999999 for 9 rounds\n",
            "CV with max_depth=9, min_child_weight=1\n",
            "\t accuracy Score 0.7063488 for 7 rounds\n",
            "CV with max_depth=9, min_child_weight=2\n",
            "\t accuracy Score 0.7114816 for 8 rounds\n",
            "CV with max_depth=9, min_child_weight=3\n",
            "\t accuracy Score 0.7142158 for 6 rounds\n",
            "CV with max_depth=9, min_child_weight=4\n",
            "\t accuracy Score 0.7138748 for 4 rounds\n",
            "CV with max_depth=9, min_child_weight=5\n",
            "\t accuracy Score 0.7101128 for 4 rounds\n",
            "CV with max_depth=9, min_child_weight=6\n",
            "\t accuracy Score 0.7128488000000001 for 7 rounds\n",
            "CV with max_depth=9, min_child_weight=7\n",
            "\t accuracy Score 0.714904 for 3 rounds\n",
            "CV with max_depth=9, min_child_weight=8\n",
            "\t accuracy Score 0.719004 for 5 rounds\n",
            "CV with max_depth=9, min_child_weight=9\n",
            "\t accuracy Score 0.7207207999999999 for 2 rounds\n",
            "Best params: max_depth 3, min_child_weight 7, accuracy Score: 0.7299628\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "clinical-symposium"
      },
      "source": [
        "params['max_depth'] = 3\n",
        "params['min_child_weight'] = 7"
      ],
      "id": "clinical-symposium",
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "connected-translation"
      },
      "source": [
        "gridsearch_params = [\n",
        "    (subsample, colsample)\n",
        "    for subsample in [i/10. for i in range(1,10)]\n",
        "    for colsample in [i/10. for i in range(1,10)] ]"
      ],
      "id": "connected-translation",
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "agreed-printer",
        "outputId": "8d7a790e-3295-4e0f-f1f1-1ceb485ff470"
      },
      "source": [
        "max_accuracy = 0. \n",
        "best_params = None \n",
        "for subsample, colsample in gridsearch_params:\n",
        "    print(\"CV with subsample={}, colsample={}\".format(\n",
        "                             subsample,\n",
        "                             colsample))\n",
        "    params['colsample_bytree'] = colsample\n",
        "    params['subsample'] = subsample\n",
        "    cv_results = xgb.cv(params, dtrain, feval= custom_eval, num_boost_round=200, maximize=True, seed=16, nfold=5, early_stopping_rounds=10)\n",
        "    mean_accuracy = cv_results['test-accuracy_score-mean'].max()\n",
        "    boost_rounds = cv_results['test-accuracy_score-mean'].argmax()\n",
        "    print(\"\\t accuracy Score {} for {} rounds\".format(mean_accuracy, boost_rounds))\n",
        "    if mean_accuracy > max_accuracy:\n",
        "        max_accuracy = mean_accuracy\n",
        "        best_params = (subsample, colsample) \n",
        "\n",
        "print(\"Best params: {}, {}, accuracy Score: {}\".format(best_params[0], best_params[1], max_accuracy))"
      ],
      "id": "agreed-printer",
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "CV with subsample=0.1, colsample=0.1\n",
            "\t accuracy Score 0.5037630000000001 for 0 rounds\n",
            "CV with subsample=0.1, colsample=0.2\n",
            "\t accuracy Score 0.6553530000000001 for 0 rounds\n",
            "CV with subsample=0.1, colsample=0.3\n",
            "\t accuracy Score 0.6553530000000001 for 0 rounds\n",
            "CV with subsample=0.1, colsample=0.4\n",
            "\t accuracy Score 0.6553530000000001 for 0 rounds\n",
            "CV with subsample=0.1, colsample=0.5\n",
            "\t accuracy Score 0.6553530000000001 for 0 rounds\n",
            "CV with subsample=0.1, colsample=0.6\n",
            "\t accuracy Score 0.6553530000000001 for 0 rounds\n",
            "CV with subsample=0.1, colsample=0.7\n",
            "\t accuracy Score 0.7186670000000001 for 0 rounds\n",
            "CV with subsample=0.1, colsample=0.8\n",
            "\t accuracy Score 0.721405 for 1 rounds\n",
            "CV with subsample=0.1, colsample=0.9\n",
            "\t accuracy Score 0.7077268000000001 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.1\n",
            "\t accuracy Score 0.5225846 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.2\n",
            "\t accuracy Score 0.6577546 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.3\n",
            "\t accuracy Score 0.6447408 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.4\n",
            "\t accuracy Score 0.6426860000000001 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.5\n",
            "\t accuracy Score 0.6426860000000001 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.6\n",
            "\t accuracy Score 0.6471303999999999 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.7\n",
            "\t accuracy Score 0.7063507999999998 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.8\n",
            "\t accuracy Score 0.7019062 for 0 rounds\n",
            "CV with subsample=0.2, colsample=0.9\n",
            "\t accuracy Score 0.7019062 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.1\n",
            "\t accuracy Score 0.5314978 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.2\n",
            "\t accuracy Score 0.6570677999999999 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.3\n",
            "\t accuracy Score 0.6560404 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.4\n",
            "\t accuracy Score 0.6529581999999999 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.5\n",
            "\t accuracy Score 0.6529581999999999 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.6\n",
            "\t accuracy Score 0.6628734000000002 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.7\n",
            "\t accuracy Score 0.7018867999999999 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.8\n",
            "\t accuracy Score 0.6923142 for 0 rounds\n",
            "CV with subsample=0.3, colsample=0.9\n",
            "\t accuracy Score 0.6923142 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.1\n",
            "\t accuracy Score 0.5284 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.2\n",
            "\t accuracy Score 0.647142 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.3\n",
            "\t accuracy Score 0.6488543999999999 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.4\n",
            "\t accuracy Score 0.6533066 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.5\n",
            "\t accuracy Score 0.6533066 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.6\n",
            "\t accuracy Score 0.6700652 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.7\n",
            "\t accuracy Score 0.7101062 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.8\n",
            "\t accuracy Score 0.7101062 for 0 rounds\n",
            "CV with subsample=0.4, colsample=0.9\n",
            "\t accuracy Score 0.7090803999999999 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.1\n",
            "\t accuracy Score 0.5503074000000001 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.2\n",
            "\t accuracy Score 0.6567252 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.3\n",
            "\t accuracy Score 0.6563846 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.4\n",
            "\t accuracy Score 0.6533048000000001 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.5\n",
            "\t accuracy Score 0.6495376 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.6\n",
            "\t accuracy Score 0.6748602 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.7\n",
            "\t accuracy Score 0.7118230000000001 for 0 rounds\n",
            "CV with subsample=0.5, colsample=0.8\n",
            "\t accuracy Score 0.7203798 for 1 rounds\n",
            "CV with subsample=0.5, colsample=0.9\n",
            "\t accuracy Score 0.7142213999999999 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.1\n",
            "\t accuracy Score 0.5386694000000001 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.2\n",
            "\t accuracy Score 0.6615262000000001 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.3\n",
            "\t accuracy Score 0.6611854 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.4\n",
            "\t accuracy Score 0.650569 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.5\n",
            "\t accuracy Score 0.650569 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.6\n",
            "\t accuracy Score 0.673148 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.7\n",
            "\t accuracy Score 0.7121625999999999 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.8\n",
            "\t accuracy Score 0.7094276 for 0 rounds\n",
            "CV with subsample=0.6, colsample=0.9\n",
            "\t accuracy Score 0.7121702000000001 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.1\n",
            "\t accuracy Score 0.5379786 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.2\n",
            "\t accuracy Score 0.6413212 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.3\n",
            "\t accuracy Score 0.646115 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.4\n",
            "\t accuracy Score 0.6526156 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.5\n",
            "\t accuracy Score 0.6526156 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.6\n",
            "\t accuracy Score 0.6806792 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.7\n",
            "\t accuracy Score 0.7196944 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.8\n",
            "\t accuracy Score 0.7159336000000001 for 0 rounds\n",
            "CV with subsample=0.7, colsample=0.9\n",
            "\t accuracy Score 0.7155928 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.1\n",
            "\t accuracy Score 0.5468792 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.2\n",
            "\t accuracy Score 0.654328 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.3\n",
            "\t accuracy Score 0.6570672 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.4\n",
            "\t accuracy Score 0.6498754 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.5\n",
            "\t accuracy Score 0.649533 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.6\n",
            "\t accuracy Score 0.6738299999999999 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.7\n",
            "\t accuracy Score 0.72243 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.8\n",
            "\t accuracy Score 0.7196885999999999 for 0 rounds\n",
            "CV with subsample=0.8, colsample=0.9\n",
            "\t accuracy Score 0.7210610000000001 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.1\n",
            "\t accuracy Score 0.5479102000000001 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.2\n",
            "\t accuracy Score 0.6632326 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.3\n",
            "\t accuracy Score 0.662207 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.4\n",
            "\t accuracy Score 0.6522749999999999 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.5\n",
            "\t accuracy Score 0.6522749999999999 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.6\n",
            "\t accuracy Score 0.6775958 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.7\n",
            "\t accuracy Score 0.7237974 for 1 rounds\n",
            "CV with subsample=0.9, colsample=0.8\n",
            "\t accuracy Score 0.7152405999999999 for 0 rounds\n",
            "CV with subsample=0.9, colsample=0.9\n",
            "\t accuracy Score 0.7183244 for 0 rounds\n",
            "Best params: 0.9, 0.7, accuracy Score: 0.7237974\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "czech-composite"
      },
      "source": [
        "params['subsample'] = 0.9\n",
        "params['colsample_bytree'] = 0.7"
      ],
      "id": "czech-composite",
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "spectacular-litigation",
        "outputId": "ae73393a-fd07-4eb9-e6ef-0ef18cad3018"
      },
      "source": [
        "max_accuracy = 0. \n",
        "best_params = None \n",
        "for eta in [0.8, 0.7, 0.6, 0.5, .3, .2, .1, .05, .01, .005, 0.0001]:\n",
        "    print(\"CV with eta={}\".format(eta))\n",
        "     # Update ETA\n",
        "    params['eta'] = eta\n",
        "\n",
        "     # Run CV\n",
        "    cv_results = xgb.cv(\n",
        "        params,\n",
        "        dtrain,\n",
        "        feval= custom_eval,\n",
        "        num_boost_round=1000,\n",
        "        maximize=True,\n",
        "        seed=16,\n",
        "        nfold=5,\n",
        "        early_stopping_rounds=20\n",
        "    )\n",
        "\n",
        "     # Finding best F1 Score\n",
        "    mean_accuracy = cv_results['test-accuracy_score-mean'].max()\n",
        "    boost_rounds = cv_results['test-accuracy_score-mean'].argmax()\n",
        "    print(\"\\t accuracy Score {} for {} rounds\".format(mean_accuracy, boost_rounds))\n",
        "    if mean_accuracy > max_accuracy:\n",
        "        max_accuracy = mean_accuracy\n",
        "        best_params = eta \n",
        "print(\"Best params: {}, accuracy Score: {}\".format(best_params, max_accuracy))"
      ],
      "id": "spectacular-litigation",
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "CV with eta=0.8\n",
            "\t accuracy Score 0.7248292000000001 for 4 rounds\n",
            "CV with eta=0.7\n",
            "\t accuracy Score 0.7244870000000001 for 7 rounds\n",
            "CV with eta=0.6\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with eta=0.5\n",
            "\t accuracy Score 0.7251734000000001 for 9 rounds\n",
            "CV with eta=0.3\n",
            "\t accuracy Score 0.7237974 for 1 rounds\n",
            "CV with eta=0.2\n",
            "\t accuracy Score 0.7241394000000001 for 4 rounds\n",
            "CV with eta=0.1\n",
            "\t accuracy Score 0.7237974 for 5 rounds\n",
            "CV with eta=0.05\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with eta=0.01\n",
            "\t accuracy Score 0.7248220000000001 for 3 rounds\n",
            "CV with eta=0.005\n",
            "\t accuracy Score 0.7241384000000001 for 3 rounds\n",
            "CV with eta=0.0001\n",
            "\t accuracy Score 0.7237976 for 2 rounds\n",
            "Best params: 0.5, accuracy Score: 0.7251734000000001\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "structured-creation"
      },
      "source": [
        "params['eta'] = 0.5"
      ],
      "id": "structured-creation",
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "annual-decimal",
        "outputId": "2f06cd20-b210-4c69-bf0b-bd6cecf425ba"
      },
      "source": [
        "max_accuracy = 0. \n",
        "best_params = None \n",
        "\n",
        "for gamma in [.5, 1, 2, 3, 4, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.8, 6, 7, 8, 9, 10]:\n",
        "    print(\"CV with gamma={}\".format(gamma))\n",
        "     # Update ETA\n",
        "    params['eta'] = gamma\n",
        "\n",
        "     # Run CV\n",
        "    cv_results = xgb.cv(\n",
        "        params,\n",
        "        dtrain,\n",
        "        feval= custom_eval,\n",
        "        num_boost_round=1000,\n",
        "        maximize=True,\n",
        "        seed=16,\n",
        "        nfold=5,\n",
        "        early_stopping_rounds=20\n",
        "    )\n",
        "\n",
        "     # Finding best F1 Score\n",
        "    mean_accuracy = cv_results['test-accuracy_score-mean'].max()\n",
        "    boost_rounds = cv_results['test-accuracy_score-mean'].argmax()\n",
        "    print(\"\\t accuracy Score {} for {} rounds\".format(mean_accuracy, boost_rounds))\n",
        "    if mean_accuracy > max_accuracy:\n",
        "        max_accuracy = mean_accuracy\n",
        "        best_params = gamma\n",
        "print(\"Best params: {}, accuracy Score: {}\".format(best_params, max_accuracy))"
      ],
      "id": "annual-decimal",
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "CV with gamma=0.5\n",
            "\t accuracy Score 0.7251734000000001 for 9 rounds\n",
            "CV with gamma=1\n",
            "\t accuracy Score 0.724483 for 1 rounds\n",
            "CV with gamma=2\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=3\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=4\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.1\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.2\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.3\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.4\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.5\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.6\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.7\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.8\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=5.8\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=6\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=7\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=8\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=9\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "CV with gamma=10\n",
            "\t accuracy Score 0.7234598000000001 for 0 rounds\n",
            "Best params: 0.5, accuracy Score: 0.7251734000000001\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "proof-strike"
      },
      "source": [
        "params['gamma'] = 0.5"
      ],
      "id": "proof-strike",
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "military-devon",
        "outputId": "47416eba-7ff2-4976-901a-fc474c8dda3e"
      },
      "source": [
        "xgb_model = xgb.train(\n",
        "    params,\n",
        "    dtrain,\n",
        "    feval= custom_eval,\n",
        "    num_boost_round= 1000,\n",
        "    maximize=True,\n",
        "    evals=[(dvalid, \"Validation\")],\n",
        "    early_stopping_rounds=20\n",
        " )"
      ],
      "id": "military-devon",
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[0]\tValidation-error:0.27223\tValidation-accuracy_score:0.72777\n",
            "Multiple eval metrics have been passed: 'Validation-accuracy_score' will be used for early stopping.\n",
            "\n",
            "Will train until Validation-accuracy_score hasn't improved in 20 rounds.\n",
            "[1]\tValidation-error:0.735978\tValidation-accuracy_score:0.264022\n",
            "[2]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[3]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[4]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[5]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[6]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[7]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[8]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[9]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[10]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[11]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[12]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[13]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[14]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[15]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[16]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[17]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[18]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "[19]\tValidation-error:0.484268\tValidation-accuracy_score:0.515732\n",
            "[20]\tValidation-error:0.515732\tValidation-accuracy_score:0.484268\n",
            "Stopping. Best iteration:\n",
            "[0]\tValidation-error:0.27223\tValidation-accuracy_score:0.72777\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "durable-christianity"
      },
      "source": [
        ""
      ],
      "id": "durable-christianity",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vital-astrology"
      },
      "source": [
        ""
      ],
      "id": "vital-astrology",
      "execution_count": null,
      "outputs": []
    }
  ]
}